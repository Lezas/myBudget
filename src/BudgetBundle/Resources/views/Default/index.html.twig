{% extends 'base.html.twig' %}

{% block stylesheets %}
    <link href="{{ asset('bundles/Budget/css/index.css') }}" rel="stylesheet" type="text/css"/>
{% endblock %}

{% block body %}
    <div class="col-md-12" style="padding-bottom: 10px;">
        <button class="btn btn-success" id="new_income">New Income</button>
        <button class="btn btn-success" id="new_expense">New expense</button>
        <button class="btn btn-success pull-right" id="reset">Reset to this month</button>
    </div>

    <div class="col-md-6 solid-border ">
        <div class="container-fluid" id="income-list-data">
            {{ month_first_day }} : {{ month_last_day }} Total: {{ total_income }}
        </div>

        <!-- Income list -->
        <div class="container-fluid">
            <h3>Income
                <button type="button" class="btn btn-xs  collapse-button" data-toggle="collapse"
                        data-target="#income-list"><span class="glyphicon glyphicon-menu-down"></span></button>
            </h3>
            <ul class="list-group list-window collapse" id="income-list">
                {% set list = income %}
                {% set name = 'income' %}
                {% include 'BudgetBundle:Default:IncomeList.html.twig' with list %}
            </ul>
        </div>
    </div>

    <div class="col-md-6 solid-border">
        <div class="container-fluid" id="expense-list-data">
            {{ month_first_day }} : {{ month_last_day }} Total: {{ total_expense }}
        </div>

        <!-- Expenses list -->
        <div class="container-fluid">
            <h3>Expenses
                <button type="button" class="btn btn-xs collapse-button" data-toggle="collapse"
                        data-target="#expense-list"><span class="glyphicon glyphicon-menu-down"></span></button>
            </h3>
            <ul class="list-group list-window collapse" id="expense-list">
                {% set list = expenses %}
                {% set name = 'expense' %}
                {% include 'BudgetBundle:Default:ExpenseList.html.twig' with list %}
            </ul>
        </div>
    </div>

    <!-- choose time interval to show graph. -->
    <div class="col-md-12 solid-border" style=" padding: 5px;">
        <div class="form-inline">
            <p>Choose time interval by which you want to see your expenses</p>
            <div class="col-lg-4 text-block">
                <p>Date From:</p>
                <div class="input-group" id="time_input">
                    <input type="text" class="form-control">
                    <span class="input-group-addon">
                        <i class="glyphicon glyphicon-calendar"></i>
                    </span>
                </div>
            </div>

            <div class="col-lg-4 text-block">
                <p>Date To:</p>
                <div class="input-group" id="time_input2">

                    <input type="text" class="form-control">
                    <span class="input-group-addon">
                        <i class="glyphicon glyphicon-calendar"></i>
                    </span>
                </div>
            </div>

            <div class="col-lg-4 text-block">
                <div class="row" style="padding: 2px;">
                    <button class="btn btn-success get-income" id="get-income-list-by-range">
                        Income list
                    </button>

                    <button class="btn btn-success get-expense" id="get-expense-list-by-range">
                        Expense list
                    </button>
                </div>

                <div class="row" style="padding: 2px;">
                    <button class="btn btn-success get-income" id="get-income-by-range">
                        Income graph
                    </button>
                    <button class="btn btn-success get-expense" id="get-expense-by-range">
                        Expense graph
                    </button>
                    <button class="btn btn-success get-expense" id="graph-both">
                        BOTH
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-12 solid-border" id="chart_div"></div>

    <!-- Modal -->
    <div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Modal Header</h4>
                </div>
                <div class="modal-body">
                    <p>Some text in the modal.</p>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>

        </div>
    </div>

{% endblock body %}

{% block javascripts %}

    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">

        var incomeDateFrom = "";
        var incomeDateTo = "";
        var expenseDateFrom = "";
        var expenseDateTo = "";

        // Load the Visualization API and the piechart package.
        google.charts.load('current', {'packages': ['corechart']});

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawChart);

        var $chartData;
        var $chartName;


        var jsonData = $.ajax({
            url: "{{ url('ajax_expense') }}",
            dataType: "json",
            async: false
        }).responseText;


        $chartData = $.parseJSON(jsonData);
        $chartName = 'Expenses';


        var options = {
            height: 350,
            title: $chartName,
            hAxis: {title: 'Day', titleTextStyle: {color: '#333'}},
            vAxis: {title: 'Money', minValue: 0},
            animation: {"startup": true, duration: 500,}
        };

        function drawChart() {

            var data = new google.visualization.DataTable();
            data.addColumn('string', 'Date');
            data.addColumn('number', $chartName);
            data.addRows($chartData);

            // Instantiate and draw our chart, passing in some options.
            var chart = new google.visualization.LineChart(document.getElementById('chart_div'));
            chart.draw(data, options);
        }

        $(window).resize(function () {
            drawChart();
        });

        function newBudgetForm(url, button, backCall) {
            button.button('loading');

            var jsonData = $.ajax({
                type: 'GET',
                url: url,
                dataType: "json",
                async: true,
            }).done(function (data) {
                if (data['success'] == true) {
                    button.button('reset');
                    $('.modal-body').html(data['form']);
                    $('#myModal').modal('show');
                } else {
                    Notificate('Something went wrong, coundn\'t fetch form from server!')
                }

            });
        }

        function getExpenses() {
            var $dateFrom = $("#time_input").children("input").val();
            var $dateTo = $("#time_input2").children("input").val();

            var jsonData = $.ajax({
                data: {date_from: $dateFrom, date_to: $dateTo},
                url: "{{ url('ajax_expense_by_date_range') }}",
                dataType: "json",
                async: true,
            }).done(function (jsonData) {
                $chartName = 'Expenses';
                $chartData = jsonData;
                drawChart();
                $('#get-expense-by-range').button('reset');
            });

        }

        function getIncome() {
            var $dateFrom = $("#time_input").children("input").val();
            var $dateTo = $("#time_input2").children("input").val();

            $.ajax({
                data: {date_from: $dateFrom, date_to: $dateTo},
                url: "{{ url('ajax_income_by_date_range') }}",
                dataType: "json",
                async: true,
            }).done(function (jsonData) {
                $chartName = 'Income';
                $chartData = jsonData;
                drawChart();
                $('#get-income-by-range').button('reset');
            });

        }

        function getBoth() {
            var $dateFrom = $("#time_input").children("input").val();
            var $dateTo = $("#time_input2").children("input").val();

            $.ajax({
                data: {date_from: $dateFrom, date_to: $dateTo},
                url: "{{ url('ajax_budget_chart_data') }}",
                dataType: "json",
                async: true,
            }).done(function (jsonData) {
                $chartName = 'Income and Expenses';
                $chartData = jsonData;
                var data = new google.visualization.DataTable();
                data.addColumn('string', 'Date');
                data.addColumn('number', 'Expenses');
                data.addColumn('number', 'Income');
                data.addRows($chartData);

                // Instantiate and draw our chart, passing in some options.
                var chart = new google.visualization.LineChart(document.getElementById('chart_div'));
                chart.draw(data, options);

            });

        }

        function deleteIncome($button) {

            var r = confirm("Are you sure you want to delete it?");
            if (r == true) {
                var $Id = $button.data("id");

                $button.button('loading');
                $.ajax({
                    url: "{{ url('ajax_delete_income') }}" + '/' + $Id,
                    dataType: "json",
                    async: true,
                }).done(function (jsonData) {

                    $button.parent('th').parent('tr').remove();
                    getIncomeList(incomeDateFrom, incomeDateTo);
                });
            }
        }

        function deleteExpense($button) {
            var r = confirm("Are you sureyou want to delete it?");
            if (r == true) {
                var $Id = $button.attr("data-id");

                $button.button('loading');
                $.ajax({
                    url: "{{ url('ajax_delete_expense') }}" + '/' + $Id,
                    dataType: "json",
                    async: true,
                }).done(function (jsonData) {

                    $button.parent('th').parent('tr').remove();
                    getExpenseList(expenseDateFrom, expenseDateTo);
                });
            }

        }

        function getIncomeList($dateFrom, $dateTo) {
            incomeDateFrom = $dateFrom;
            incomeDateTo = $dateTo;
            $.ajax({
                data: {date_from: $dateFrom, date_to: $dateTo},
                url: "{{ url('ajax_income_list_by_date_range') }}",
                dataType: "json",
                async: true,
            }).done(function (data) {


                $('#income-list').html(data['list']);
                var $text = data['date_from'] + " : " + data['date_to'] + " Total: " + data['total'];

                $('#income-list-data').html($text);

                $('#get-income-list-by-range').button('reset');
            });

        }

        function getincomeList($dateFrom, $dateTo) {
            getIncomeList($dateFrom, $dateTo);
        }

        function getExpenseList($dateFrom, $dateTo) {

            expenseDateFrom = $dateFrom;
            expenseDateTo = $dateTo;
            $.ajax({
                data: {date_from: $dateFrom, date_to: $dateTo},
                url: "{{ url('ajax_expense_list_by_date_range') }}",
                dataType: "json",
                async: true,
            }).done(function (data) {
                $('#expense-list').html(data['list']);

                var $text = data['date_from'] + " : " + data['date_to'] + " Total: " + data['total'];

                $('#expense-list-data').html($text);

                $('#get-expense-list-by-range').button('reset');
            });

        }

        function getexpenseList($dateFrom, $dateTo) {
            getExpenseList($dateFrom, $dateTo)
        }

        function getIncomeEdit($button) {
            var $Id = $button.attr("data-id");

            $button.button('loading');
            var jsonData = $.ajax({
                type: 'GET',
                url: "{{ url('ajax_new_income') }}/" + $Id,
                dataType: "json",
                async: true,
            }).done(function (data) {
                if (data['success'] == true) {
                    $button.button('reset');
                    $('.modal-body').html(data['form']);
                    $('#myModal').modal('show');
                } else if (data['success'] == false) {
                    Notificate('Something went wrong:' + data['cause'])
                }
            });
        }

        function getExpenseEdit($button) {

            var $expenseId = $button.attr("data-id");
            $button.button('loading');

            var jsonData = $.ajax({
                type: 'GET',
                url: "{{ url('ajax_new_expense') }}/" + $expenseId,
                dataType: "json",
                async: true,
            }).done(function (data) {
                if (data['success'] == true) {
                    $button.button('reset');

                    $('.modal-body').html(data['form']);
                    $('#myModal').modal('show');
                } else if (data['success'] == false) {
                    Notificate('Something went wrong:' + data['cause'])
                }

            });
        }

        function Notificate(text) {
            $base = $('<div class="alert alert-success text-center fade in" id="notification-div"><a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a><strong>__TEXT__</strong></div>');
            $str = $base.prop('outerHTML');

            var $res = $str.replace("__TEXT__", text);

            document.getElementById("notification-div").innerHTML = $res;
        }

        $('.collapse-button').click(function () {
            if ($(this).children("span").hasClass('glyphicon glyphicon-menu-up')) {
                $(this).children("span").attr('class', 'glyphicon glyphicon-menu-down');
            } else {
                $(this).children("span").attr('class', 'glyphicon glyphicon-menu-up');
            }
        });

        $('#get-income-list-by-range').click(function () {

            $('#get-income-list-by-range').button('loading');
            var $dateFrom = $("#time_input").children("input").val();
            var $dateTo = $("#time_input2").children("input").val();

            getIncomeList($dateFrom, $dateTo);

        })

        $('#get-expense-list-by-range').click(function () {
            $('#get-expense-list-by-range').button('loading');

            var $dateFrom = $("#time_input").children("input").val();
            var $dateTo = $("#time_input2").children("input").val();

            getExpenseList($dateFrom, $dateTo);

        })

        $('#get-expense-by-range').click(function () {
            $('#get-expense-by-range').button('loading');
            getExpenses();

        });

        $('#get-income-by-range').click(function () {
            $('#get-income-by-range').button('loading');
            getIncome();

        });

        $('#graph-both').click(function () {
            getBoth();
        });

        $(document).on("click", '.expense-pencil', function () {
            $button = $(this);
            getExpenseEdit($button);
        });

        $(document).on("click", '.expense-delete', function () {
            $button = $(this);
            deleteExpense($button);
        });

        $(document).on("click", '.income-delete', function () {
            $button = $(this);
            deleteIncome($button);
        });

        $(document).on("click", '.income-pencil',  function(){
            $button = $(this);
            getIncomeEdit($button);
        });

        $('#new_expense').click(function () {
            $(this).button('loading');
            var $button = $(this);
            var $url = "{{ url('ajax_new_expense') }}";

            newBudgetForm($url, $button);
        });

        $('#new_income').click(function () {
            $(this).button('loading');
            var $button = $(this);
            var $url = "{{ url('ajax_new_income') }}";

            newBudgetForm($url, $button);
        });

        $('#reset').click(function () {
            getIncomeList("", "");
            getExpenseList("", "");
        })

        var ROUNDING = 30 * 60 * 1000;
        /*ms*/
        start = moment();
        start = moment(Math.ceil((+start) / ROUNDING) * ROUNDING);
        jQuery(document).ready(function () {

            $('#time_input').datetimepicker({
                format: 'YYYY-MM-DD HH:mm',
                stepping: 1
            });
            $('#time_input2').datetimepicker({
                format: 'YYYY-MM-DD HH:mm',
                stepping: 1
            });
        });

        $('body').on('submit', '.create_event_form', function (e) {

            e.preventDefault();

            var $expenseId = $(this).attr("data-id");
            var $button = $(this).find('.save');

            $button.button('loading');


            $.ajax({
                type: $(this).attr('method'),
                url: $(this).attr('action') + '/' + $expenseId,
                data: $(this).serialize()
            })
                    .done(function (data) {
                        $button.button('reset');

                        if (data['valid'] == true) {
                            $('.modal-body').html('');
                            $('#myModal').modal('hide');
                            Notificate('Data has been saved')
                        } else if (data['valid'] == false) {
                            $('.modal-body').html(data['form']);
                            Notificate('Something went wrong:' + data['cause'])
                        }
                    });
        });

        $('body').on('submit', '.create_budget', function (e) {

            e.preventDefault();

            var $button = $(this).find('.save');

            $button.button('loading');

            var name = $(this).attr('name');
            $.ajax({
                type: $(this).attr('method'),
                url: $(this).attr('action'),
                data: $(this).serialize()
            })
                    .done(function (data) {
                        $button.button('reset');

                        var function_name = "get" + name + "List";
                        var dateFromName = name + "DateFrom";
                        var dateToName = name + "DateTo";
                        window[function_name](window[dateFromName], window[dateToName]);

                        if (data['valid'] == true) {
                            $('.modal-body').html('');
                            $('#myModal').modal('hide');
                            Notificate('Data has been saved')
                        } else if (data['valid'] == false) {
                            $('.modal-body').html(data['form']);
                        }
                    });
        });

    </script>

{% endblock %}
